name: '[shiprinter] Staing professional'

on:
  push:
    branches:
      - '**'
env:
  FLUTTER_VERSION: '3.x'

jobs:
  build-desktop:
    name: Build shiprinter-pro for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os:
          - windows
          - ubuntu
          # - macos
    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          repository: fewensa/actions
          path: .github/actions

      - name: Checkout
        uses: ./.github/actions/clone-any
        with:
          platform: gitlab
          repository: repotea-workspace/shiprinter
          access_token: '${{ secrets.GITLAB_TOKEN }}'
          ref_file: .github/ref.txt

#      - uses: subosito/flutter-action@v2
#        with:
#          flutter-version: ${{ env.FLUTTER_VERSION }}
#          channel: stable
#
#      - name: Setup dependencies
#        if: matrix.os == 'ubuntu'
#        run: |
#          sudo apt update -y
#          sudo apt install -y clang ninja-build libgtk-3-dev
#
#      - name: Setup platform for windows/macos
#        if: matrix.os != 'ubuntu'
#        run: flutter config --enable-${{ matrix.os }}-desktop
#
#      - name: Setup platform for ubuntu
#        if: matrix.os == 'ubuntu'
#        run: flutter config --enable-linux-desktop
#
#      - name: Prepare scripts
#        run: |
#          git config --global credential.helper store
#          echo 'https://${{ secrets.GITLAB_TOKEN }}@gitlab.com' >> ~/.git-credentials
#          sh -f professional/scripts/prepare-publish.sh
#
#      - name: Try build for windows/macos
#        if: matrix.os != 'ubuntu'
#        run: |
#          cd professional
#          flutter build ${{ matrix.os }} --release
#
#      - name: Try build for ubuntu
#        if: matrix.os == 'ubuntu'
#        run: |
#          cd professional
#          flutter build linux --release
#
#      - name: Check dist for windows
#        if: matrix.os == 'windows'
#        run: |
#          mv professional/build/windows/runner/Release shiprinter-pro
#          mkdir -p shared
#          7z a -tzip shared/shiprinter-pro-windows-x86_64.zip ./shiprinter-pro
#
#      - name: Collect shared for ubuntu
#        if: matrix.os == 'ubuntu'
#        run: |
#          sudo apt update -y
#          sudo apt install -y zip
#          mv professional/build/linux/x64/release/bundle shiprinter-pro
#          mkdir -p shared
#          zip -jr \
#            shared/shiprinter-pro-linux-x86_64.zip \
#            shiprinter-pro

      - name: Test CI w
        if: matrix.os == 'windows'
        run: |
          mkdir -p shared
          echo 'win' > shared/shiprinter-pro-windows-x86_64.zip

      - name: Test CI l
        if: matrix.os == 'ubuntu'
        run: |
          mkdir -p shared
          echo 'linux' > shared/shiprinter-pro-linux-x86_64.zip


      - name: Check dist for macos
        if: matrix.os == 'macos'
        run: |
          brew install tree
          brew install coreutils
          tree build

      - name: Upload shared
        uses: actions/upload-artifact@v2
        with:
          name: shared-artifact
          path: shared

  build-android:
    name: Build shiprinter-pro for android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          repository: fewensa/actions
          path: .github/actions

      - name: Checkout
        uses: ./.github/actions/clone-any
        with:
          platform: gitlab
          repository: repotea-workspace/shiprinter
          access_token: '${{ secrets.GITLAB_TOKEN }}'
          ref_file: .github/ref.txt

      - name: Generate android sign config file
        uses: ./.github/actions/gen-android-sign
        with:
          path: professional/android/key.properties
          signingKeyBase64: ${{ secrets.SHIPRINTER_PRO_JKS }}
          alias: ${{ secrets.SHIPRINTER_PRO_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.SHIPRINTER_PRO_STORE_PASSWORD }}
          keyPassword: ${{ secrets.SHIPRINTER_PRO_KEY_PASSWORD }}

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable

      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Prepare scripts
        run: |
          git config --global credential.helper store
          echo 'https://${{ secrets.GITLAB_TOKEN }}@gitlab.com' >> ~/.git-credentials
          sh -f professional/scripts/prepare-publish.sh

#      - name: Try build for android
#        run: |
#          cd professional
#          flutter pub get
#          flutter build apk --release
#
#      - name: Collect shared for android
#        run: |
#          mkdir -p shared
#          mv professional/build/app/outputs/flutter-apk/app-release.apk shared/shiprinter-pro.apk

      - name: Test CI a
        run: |
          mkdir -p shared
          echo 'linux' > shared/shiprinter-pro.apk

      - name: Upload shared
        uses: actions/upload-artifact@v2
        with:
          name: shared-artifact
          path: shared


  publish-shiprinter:
    name: Publish shiprinter-pro
    runs-on: ubuntu-latest
    needs: [ build-desktop, build-android ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: shared-artifact
          path: shared

      - name: Hash file
        run: |
          (cd shared && sha256sum * | tee sha256sums.txt)

      - uses: benjlevesque/short-sha@v2.1
        id: short-sha

      - uses: rickstaa/action-create-tag@v1
        with:
          tag: sha-${{ steps.short-sha.outputs.sha }}

      - name: Publish github release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            shared/*
          token: ${{ secrets.GITHUB_TOKEN }}
          name: sha-${{ steps.short-sha.outputs.sha }}
          tag_name: sha-${{ steps.short-sha.outputs.sha }}
          prerelease: true

  update-rockbase:
    name: Update rockbase
    runs-on: ubuntu-latest
    needs: [ publish-shiprinter ]
    steps:
      - uses: actions/checkout@v2

      - uses: benjlevesque/short-sha@v2.1
        id: short-sha

      - uses: actions/checkout@v2
        with:
          repository: fewensa/actions
          path: .github/actions

      - name: Checkout
        uses: ./.github/actions/clone-any
        with:
          platform: gitlab
          repository: repotea-workspace/rockbase
          access_token: '${{ secrets.GITLAB_TOKEN }}'

      - name: Update data
        run: |
          TAG=sha-${{ steps.short-sha.outputs.sha }}
          COMMIT="$(cat .github/commit.txt)"
          TIME="$(cat .github/date.txt)"
          RELEASE_ARTIFACTS_BASE=https://ghproxy.com/${{ github.server_url }}/${{ github.repository }}/releases/download/${TAG}
          MESSAGE="$(cat .github/message.txt)"
          TEMPLATE="
          ### Intro
          - commit: ${COMMIT}
          - message: ${MESSAGE}
          - time: ${TIME}

          ### Android
          {% qrcode "${RELEASE_ARTIFACTS_BASE}/shiprinter-pro.apk" %}

          ### Windows
          - [Download](${RELEASE_ARTIFACTS_BASE}/shiprinter-pro-windows-x86_64.zip)

          ### Linux
          - [Download](${RELEASE_ARTIFACTS_BASE}/shiprinter-pro-linux-x86_64.zip)
          "

          LATEST_FILE=source/_data/shipro/latest.md
          HISTORY_FILE=source/_data/shipro/history.md

          echo '' > ${LATEST_FILE}
          echo "${COMMIT}" >> ${LATEST_FILE}
          echo "${TEMPLATE}" >> ${LATEST_FILE}

          mv ${HISTORY_FILE} ${HISTORY_FILE}.old
          echo '' > ${HISTORY_FILE}
          echo "${TEMPLATE}" >> ${HISTORY_FILE}
          echo '---' >> ${HISTORY_FILE}
          cat ${HISTORY_FILE}.old >> ${HISTORY_FILE}
          rm -rf ${HISTORY_FILE}

      - name: Push rockbase
        run: |
          ls -la
          git add source
          git commit -m 'Update shipro'
          git push origin main


  clean-artifacts:
    name: Clean artifacts
    runs-on: ubuntu-latest
    needs: [ publish-shiprinter ]
    if: always()
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: shared-artifact

